---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, '');
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === '/' + (subpath?.[0] || '');
---

<a href={href}
  class:list={[
    className,
  ]}
  {...props}>
  <slot />
</a>
<style>
  a {
    color:inherit;
    text-decoration: underline;
    text-decoration-color:var(--color-yellow-500);
    text-underline-offset: .4em;
  }
  @keyframes linkAnimation {
  from {
    text-decoration: underline;
  }

  to {
    text-decoration: line-through;
    text-decoration-style: wavy;
    text-decoration-color: var(--black) !important;
  }
}
  a:hover {
    background-color: yellow;
    color:var(--black);
    text-decoration: line-through;
    text-decoration-style: wavy;
    text-decoration-color: var(--black) !important;
    text-decoration-thickness: .1em;
    animation: .5s 1 forwards linkAnimation;
    transition: all .5s ease;
  }

  a {
    font-family: var(--font-sans);
  }

</style>
---
interface Props {
  collection?: string;
}

const { collection } = Astro.props;
import H3 from './mdxComponents/H3.astro';
---

<div class="table-of-contents order-first xl:sticky xl:top-[5%] xl:self-start my-8 xl:mb-0 lg:max-xl:border-b-2 xl:border-r-2 border-yellow-300 mx-auto hidden xl:block">
  <div class="p-4 bg-slate-50 rounded-lg">
    <button id="tocToggle" class="flex items-center justify-between w-full text-left xl:hidden">
      <h3 class="text-xl font-semibold text-gray-700">On this page</h3>
      <span class="arrow-container pointer-events-none">
        <svg class="w-4 h-4 transform transition-transform duration-200" viewBox="0 0 24 24" fill="none" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
        </svg>
      </span>
    </button>
    <div id="toc" class="block">
      <!-- TOC content will be generated here -->
    </div>
  </div>
</div>

<style>
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }

  .toc-item {
    opacity: 0;
    animation: fadeIn 0.5s ease-out forwards;
  }
</style>

<script is:inline>
  (function() {
    // Debounce function to limit execution frequency
    function debounce(func, wait) {
      let timeout;
      return function() {
        const context = this, args = arguments;
        clearTimeout(timeout);
        timeout = setTimeout(() => func.apply(context, args), wait);
      };
    }

    // Generate table of contents from headings
    function generateTOC() {
      const headings = document.querySelectorAll('h2, h3');
      const toc = document.getElementById('toc');

      if (!toc || headings.length === 0) return;

      toc.innerHTML = '';
      const ul = document.createElement('ul');
      ul.className = 'space-y-2 list-none p-0';

      headings.forEach((heading, index) => {
        if (heading.textContent?.toLowerCase() === 'on this page') return;

        const id = heading.textContent?.toLowerCase().replace(/\s+/g, '-').replace(/[^\w-]/g, '') || '';
        if (!id) return;

        heading.id = id;

        const li = document.createElement('li');
        li.className = 'toc-item';
        li.style.animationDelay = `${index * 150}ms`;  // Increased delay between items

        const a = document.createElement('a');
        a.href = `#${id}`;
        a.textContent = heading.textContent;
        a.className = heading.tagName === 'H3'
          ? 'ml-4 block text-sm text-stone-600 hover:text-yellow-800 hover:font-bold mb-2'
          : 'mb-2 font-semibold text-base capitalize block text-stone-700 hover:text-yellow-700 hover:font-semibold';

        li.appendChild(a);
        ul.appendChild(li);
      });

      toc.appendChild(ul);
    }

    // Set up toggle functionality
    function setupTOC() {
      const tocToggle = document.getElementById('tocToggle');
      const toc = document.getElementById('toc');

      if (!tocToggle || !toc) return;

      // Set initial state based on screen size
      const isMobile = window.innerWidth < 1280;
      if (isMobile) {
        toc.classList.add('hidden');
      } else {
        toc.classList.remove('hidden');
      }

      // Handle toggle click
      tocToggle.addEventListener('click', function() {
        toc.classList.toggle('hidden');
        tocToggle.querySelector('svg')?.classList.toggle('rotate-180');
      });

      // Handle window resize
      window.addEventListener('resize', debounce(function() {
        const isNowMobile = window.innerWidth < 1280;
        if (isNowMobile !== isMobile) {
          if (isNowMobile) {
            toc.classList.add('hidden');
          } else {
            toc.classList.remove('hidden');
          }
        }
      }, 100));
    }

    // Initialize on various events
    function init() {
      generateTOC();
      setupTOC();
    }

    if (document.readyState !== 'loading') {
      init();
    } else {
      document.addEventListener('DOMContentLoaded', init);
    }

    document.addEventListener('astro:page-load', init);
  })();
</script>
</div>
</div>

---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, '');
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === '/' + (subpath?.[0] || '');
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
<style>
	a {
		display: inline-block;
		text-decoration: none;
    font-size: 1.125rem !important;
	}
  a:hover {
  text-decoration-skip-ink: none;
  background-color:var(--accent) !important;
  text-decoration-thickness: .05em;
  animation: .2s 1 forwards linkAnimation;
}
	a.active {
		text-decoration: line-through;
    text-decoration-style: wavy !important;
    text-decoration-thickness: .05em;
    pointer-events: none;
	}
</style>

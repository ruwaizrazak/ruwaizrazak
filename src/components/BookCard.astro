---
import FormattedDate from './FormattedDate.astro';
import Image from './mdxComponents/Image.astro';
import P from './mdxComponents/P.astro';
import Type from './type.astro';
import Link from './mdxComponents/Link.astro';
import H3 from './mdxComponents/H3.astro';

interface Props {
  title: string;
  description: string;
  date: Date;
  url: string;
  heroImage: string;
  author: string;
  readStatus?: 'reading' | 'completed' | 'to-read';
  imageClass?: string;
}

const { title, description, date, url, heroImage, author, readStatus = 'to-read', imageClass = '' } = Astro.props;

const statusColors = {
  'reading': 'bg-yellow-100 text-yellow-800',
  'completed': 'bg-green-100 text-green-800',
  'to-read': 'bg-gray-100 text-gray-800'
};
---

<div class="book-card">
  <a href={url} class={`${readStatus === 'completed' ? 'bg-green-50/50' : ''}`}>
    <div class="relative">
      <Image
        src={heroImage}
        alt={title}
        class={`w-full h-full object-cover rounded-lg transition-opacity ${readStatus === 'completed' ? 'opacity-90' : ''} ${imageClass} book-card-image`}
      />
      <div class="absolute top-2 left-2">
        <span class={`px-5 py-1 text-xs font-medium ${statusColors[readStatus]}`}>
          {readStatus}
        </span>
      </div>
    </div>
    <div class="p-4">
        <H3 className='transition-colors'>{title}</H3>
        <p class="text-sm">by {author}</p>

      <P className='text-gray-600 line-clamp-2 text-base'>{description}</P>
      <div class="flex flex-row gap-4 flex-wrap text-sm items-start text-gray-500"">
        <FormattedDate date={date} />
        <Type>Books</Type>
      </div>
    </div>
  </a>
</div>

<style>
  .book-card {
    transition: transform 0.2s ease;
    filter: opacity(100%);
  }
  .book-card:hover {
    transform: translateY(-4px);
    filter: opacity(50%);
  }
  .book-card:hover .book-card-image {
    opacity: 0.5;
  }
  h1 {
    font-family: var(--font-serif);
  }
  p {
    font-family: var(--font-sans);
  }

</style>
---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import H1 from '../components/mdxComponents/H1.astro';
import P from '../components/mdxComponents/P.astro';
import H2 from '../components/mdxComponents/H2.astro';
import Link  from '../components/mdxComponents/Link.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Main from '../components/Main.astro';
import { getCollection } from 'astro:content';
import Image from '../components/mdxComponents/Image.astro';
import NoteCard from '../components/NoteCard.astro';
import BookCard from '../components/BookCard.astro';


// Get 10 featured posts from each collection
const notes = (await getCollection('notes'))
  .filter(post => post.data.tags?.includes('featured'))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 4);

const essays = (await getCollection('essays'))
  .filter(post => post.data.tags?.includes('featured'))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 10);

const casestudies = (await getCollection('casestudies'))
  .filter(post => post.data.tags?.includes('featured'))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 10);

const books = (await getCollection('books'))
  .filter(post => post.data.tags?.includes('featured'))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 10);

  const caseStudies = notes
  .filter(post => {
    const tags = post.data.tags || [];
    return tags.some(tag => {
      const lowercaseTag = tag.toLowerCase();
      return (lowercaseTag === 'case-studies' || lowercaseTag === 'case-study');
    }) && tags.some(tag => tag.toLowerCase() === 'featured');
  })
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<Header />
		<Main>

      <div class="prose lg:max-w max-w-none">
        <H1><b>Ruwaiz</b> is an <mark>user experience designer</mark>, who loves to build things</H1>
        <P>Designer, Reader who loves to build on weekends.</P>
        <br>
        <H2> Career</H2>
        <P> I work currently as a Senior UX Designer at<Link href="https://www.nordeus.com">Nordeus.</Link>My expertise is in building experience for video games through research heavy and optimized design pipeline. Take a look at my<Link href="/about">About</Link>if you are interested in my experiences.</P>
      </div>
      <section class="mt-20">
        <H2>Case Studies</H2>
        <ul class="grid grid-cols-1 md:grid-cols-2 sm:grid-cols-2 gap-4">
            {
                caseStudies.map((post) => (
                    <li class="card hover:shadow-lg transition-shadow">
                        <a href={`/notes/${post.id}/`} class="block">
                        <Image src={post.data.heroImage} alt={post.data.title} class="w-full" />
                            <div class="p-4">
                                <h4 class="title text-xl font-bold">{post.data.title}</h4>
                                <p class="date text-gray-600">
                                    <FormattedDate date={post.data.pubDate} />
                                </p>
                            </div>
                        </a>
                    </li>
                ))
            }
        </ul>
      </section>

      <section class="mt-20 flex flex-col md:flex-row gap-8">
            <div class="w-full md:w-2/3">
              <H2>Featured Essays</H2>
              <ul class="grid grid-cols-1 md:grid-cols-3 gap-4">
                  {essays.map((post) => (
                      <li>
                          <NoteCard
                              title={post.data.title}
                              description={post.data.description}
                              date={post.data.pubDate}
                              url={`/essays/${post.id}/`}
                          />
                      </li>
                  ))}
              </ul>
            </div>

            <div class="w-full md:w-1/3">
              <H2>Featured Notes</H2>
              <ul class="flex flex-col gap-4">
                  {notes.map((post) => (
                      <li>
                          <NoteCard
                              title={post.data.title}
                              description={post.data.description}
                              date={post.data.pubDate}
                              url={`/notes/${post.id}/`}
                          />
                      </li>
                  ))}
              </ul>
            </div>
      </section>

      <section class="mt-20">
        <H2>Featured Books</H2>
        <ul class="grid grid-cols-2 md:grid-cols-4 gap-4">
            {books.map((post) => (
                <li>
                    <BookCard
                  title={post.data.title}
                  description={post.data.description || 'No description available'}
                  date={post.data.pubDate}
                  url={`/books/${post.id}/`}
                  heroImage={post.data.heroImage || '/placeholder-book.jpg'}
                  author={post.data.author || 'Unknown Author'}
                  readStatus={post.data.readStatus || 'to-read'}
                  />
                </li>
            ))}
        </ul>
      </section>
      </section>

      <section class="flex">
       <!--Layout for Essays and notes -->

      </section>
		</Main>
		<Footer />
	</body>
</html>

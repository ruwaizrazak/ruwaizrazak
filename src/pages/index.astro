---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import H1 from '../components/mdxComponents/H1.astro';
import P from '../components/mdxComponents/P.astro';
import H3 from '../components/mdxComponents/H3.astro';
import Link  from '../components/mdxComponents/Link.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Main from '../components/Main.astro';
import { getCollection } from 'astro:content';
import Image from '../components/mdxComponents/Image.astro';
import NoteCard from '../components/NoteCard.astro';
import BookCard from '../components/BookCard.astro';
import WorkCard from '../components/workCard.astro';
import EssayCard from '../components/EssayCard.astro';
import UL from '../components/mdxComponents/UL.astro';
import H2 from '../components/mdxComponents/H2.astro';


// Get 10 featured posts from each collection
const notes = (await getCollection('notes'))
  .filter(post => post.data.featured === true)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 4);

const essays = (await getCollection('essays'))
  .filter(post => post.data.featured === true)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 10);

const works = (await getCollection('works'))
  .filter(post => post.data.featured === true)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 10);

const books = (await getCollection('books'))
  .filter(post => post.data.featured === true)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 10);

---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<Header />
		<Main>
      <div class="content-grid gap-5">
        <div class="hero-section">
          <H1 className='mb-3 max-w-5xl'>Ruwaiz is an <mark>user experience designer</mark>, who loves to build.</H1>
          <P className='prose max-w-4xl prose-stone mt-5 mb-7 md:mb-14 lg:mb-21 text-xl md:text-xl lg:text-2xl'>Designer, Reader who loves to build on weekends.</P>
        </div>

        <div class="career-section mt-10">
          <H2 className='mb-5 prose-stone'>Career</H2>
          <P className='prose max-w-4xl prose-stone mt-0 mb-0 text-lg md:text-xl lg:text-xl'>
            I work currently as a Senior UX Designer at<Link href="https://www.nordeus.com">Nordeus.</Link>My expertise is in building experience for video games through research heavy and optimized design pipeline. <br> <br>Following are the selected works from my career and if you are interested in my experiences, take a look at my<Link href="/about">about section</Link>.
          </P>
          <ul class="mt-10 ps-0 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-10">
            {works.map((post) => (
              <li>
                <WorkCard
                  title={post.data.title}
                  company={post.data.company}
                  url={`/works/${post.id}/`}
                  heroImage={post.data.heroImage || '/placeholder-work.jpg'}
                />
              </li>
            ))}
          </ul>
        </div>

        <div class="featured-grid gap-4 mt-20">
          <div class="essays-section">
            <H2>Featured Essays</H2>
            <ul class="masonry-grid columns-1 sm:columns-1 md:columns-2 lg:columns-2 gap-5">
              {essays.map((post) => (
                <li>
                  <EssayCard
                    title={post.data.title}
                    description={post.data.description || 'No description available'}
                    date={post.data.pubDate}
                    url={`/essays/${post.id}/`}
                    heroImage={post.data.heroImage}
                  />
                </li>
              ))}
            </ul>
          </div>

          <div class="notes-section mt-20 mb-10 lg:mt-0 md:m-0">
            <H2>Featured Notes</H2>
            <ul class="flex flex-col gap-4">
              {notes.map((post) => (
                <li>
                  <NoteCard
                    title={post.data.title}
                    description={post.data.description}
                    date={post.data.pubDate}
                    url={`/notes/${post.id}/`}
                  />
                </li>
              ))}
            </ul>
          </div>

          <div class="books-section my-20">
            <H2>Featured Books</H2>
            <ul class="grid grid-cols-1 sm:grid-cols-2  md:grid-cols-3 lg:grid-cols-4 gap-5">
              {books.map((post) => (
                <li>
                  <BookCard
                    title={post.data.title}
                    description={post.data.description || 'No description available'}
                    date={post.data.pubDate}
                    url={`/books/${post.id}/`}
                    heroImage={post.data.heroImage || '/placeholder-book.jpg'}
                    author={post.data.author || 'Unknown Author'}
                    readStatus={post.data.readStatus || 'to-read'}
                  />
                </li>
              ))}
            </ul>
          </div>
        </div>
      </div>
		</Main>
		<Footer />
	</body>
</html>

<style>
  .content-grid {
    display: grid;
  }

  .featured-grid {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-areas:
      "essays essays notes"
      "books books  books";
  }

  .essays-section {
    grid-area: essays;
  }

  .notes-section {
    grid-area: notes;
  }

  .books-section {
    grid-area: books;
  }

  @media (max-width: 768px) {
    .featured-grid {
      grid-template-columns: 1fr;
      grid-template-areas:
        "essays"
        "notes"
        "books";
      gap: var(--space-l);
    }
  }

  ul {
    margin-block-start: 0em !important;
  }
</style>

---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import Link  from '../components/mdxComponents/Link.astro';
import { getCollection } from 'astro:content';
import GardenLink from '../components/GardenLink.astro';
import GradientHeading from '../components/mdxComponents/gradientHeading.astro';
import GradientLine from '../components/mdxComponents/gradientLine.astro';
import EssayCard from '../components/EssayCard.astro';
import NoteCard from '../components/NoteCard.astro';
import WorkCard from '../components/WorkCard.astro';
import BookCard from '../components/BookCard.astro';
import { ClientRouter } from "astro:transitions";
import Button from '../components/Button.astro';
import Tooltip from '../components/tooltip.astro';

import ProfileCard from '../components/ProfileCard/ProfileCard.tsx';


// Get 10 featured posts from each collection
// Helper function to standardize slug creation across collections
function createStandardSlug(post: any) {
  const filename = post.id.split('/').pop().replace(/\.[^.]+$/, '');
  return filename.toLowerCase();
}

// Helper function to sort by date
function sortByDateDesc(a: any, b: any) {
  const dateA = new Date(a.data.pubDate);
  const dateB = new Date(b.data.pubDate);
  return dateB.valueOf() - dateA.valueOf();
}

// Get featured and published posts from each collection
const notes = (await getCollection('notes', ({ data }) => data.publish === true))
  .filter(post => post.data.featured === true && post.data.pubDate)
  .map(post => ({
    ...post,
    slug: createStandardSlug(post)
  }))
  .sort(sortByDateDesc)
  .slice(0, 4);

const essays = (await getCollection('essays'))
  .filter(post => (
    post.data.publish === true &&
    post.data.featured === true &&
    post.data.pubDate
  ))
  .map(post => ({
    ...post,
    slug: createStandardSlug(post)
  }))
  .sort(sortByDateDesc)
  .slice(0, 10);



const works = (await getCollection('works', ({ data }) => data.publish === true))
  .filter(post => post.data.featured === true && post.data.pubDate)
  .map(post => ({
    ...post,
    slug: createStandardSlug(post)
  }))
  .sort(sortByDateDesc)
  .slice(0, 10);

const books = (await getCollection('books', ({ data }) => data.publish === true))
  .filter(post => post.data.featured === true && post.data.pubDate)
  .map(post => ({
    ...post,
    slug: createStandardSlug(post)
  }))
  .sort(sortByDateDesc)
  .slice(0, 10);



---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
        <ClientRouter />
            <script>
      import { create } from '@lottiefiles/lottie-interactivity';
      import lottie from 'lottie-web';
    </script>
	</head>
	<body>
		<Header />
		<main class="bg-white">
      <!--Hero Section -->
      <div class="w-[90%] mx-auto justify-between grid grid-cols-1 md:grid-cols-2 gap-10">
        <div class="sm:w-full md:w-2xl mt-10">
          <p class="w-full text-xl font-serif">
            
            <span id="greetingSpan" class="text-3xl uppercase text-konpeki">
                ഹലോ
            </span>,
          

            <br><br> I'm <strong>Ruwaiz</strong>. A Designer who learns and writes on weekends.
            
            <br><br>I'm an User Experience Design with 7+ years experience in building games with <Link href="https://nordeus.com">Nordeus</Link>, <Link href="https://www.zynga.com">Zynga</Link>, and Glu Mobile (now acquired by EA ).<Link href="/cv">Get a glimpse of that career here.</Link>
            
            <br><br>I'm also an advocate for fedeverse, data literacy, programming and knowledge sharing.</p>

          <h4 class="text-xl uppercase text-gray-500 mt-10">Garden</h4>
          <ul>

            <li><GardenLink
              href="/essays"
              title="Essays"
              description="Refined, long written opiniated documents."
            /></li>
            <li><GardenLink
              href="/notes"
              title="Notes"
              description="Not refined, incomplete, but a starting point."
            /></li>
            <li><GardenLink
              href="/books"
              title="Books"
              description="I've read, Currently Reading and my notes on them."
            /></li>
            <li><GardenLink
              href="/garden"
              title="Everything"
              description="Contains everything I've written."
            /></li>
            <li class="mt-5">---</li>
            <li><GardenLink
              href="/about"
              title="About"
              description="What am I?"
            /></li>
            <li><GardenLink
              href="/live"
              title="Live"
              description="Shares a glimpse of whats happening."
            /></li>

          </ul>
        </div>
        <div class="hidden xl:flex justify-end">
          <!--svg goes here -->
          <svg width="100%" height="1021" viewBox="0 0 582 1021" fill="none" xmlns="http://www.w3.org/2000/svg" class="opacity-90">
            <path d="M299.481 0V329.5C300.647 348.333 288.9 369.58 270.48 388C262.48 396 116.642 337 139.481 285C162.32 233 270.48 298.3 270.48 449.5C276.5 530.5 190.981 489.5 139.481 492C50.4804 496.321 4.97693 619.5 152.479 663C233.5 686.894 328.477 596 313.979 492C299.481 388 378.81 358.468 477.479 367C570 375 585.479 449.2 545.479 492C510.312 517.333 431.579 548.8 397.979 472C395.979 451.5 406.779 414.4 465.979 430C539.979 449.5 505.979 582.5 489.479 590C472.979 597.5 395.64 632.865 381.979 553C368.979 477 307.979 308 139.481 472C87.9788 522.127 137.479 556.7 241.479 559.5C320.979 553 331.979 600 344.479 631.5C371.479 667.5 419.479 730.5 489.479 675.5C559.479 620.5 467.479 522.5 330.479 553C248.479 510.5 259.979 402.973 102.979 405C-19 406.575 17.0001 487 38.9787 530.5C51.2959 576 183.313 616.052 214.5 641.5C263.521 681.5 216 737.5 136 740.5C56 743.5 47.8099 699.239 87.9788 648.5C114.5 615 139.481 604.465 198.979 600.5C266.5 596 299.481 614.708 299.481 671C299.481 729.5 299.481 926 299.481 1021" stroke="url(#paint0_linear_203_524)" stroke-width="31" class="path-animation"/>
            <defs>
              <linearGradient id="paint0_linear_203_524" x1="293.018" y1="0" x2="293.018" y2="1021" gradientUnits="userSpaceOnUse">
                <stop stop-color="#1E1E1E"/>
                <stop offset="1" stop-color="#324084"/>
              </linearGradient>
            </defs>
          </svg>
        </div>
        </div>
        
        <!-- Selected Works -->
        <div class="w-[98%] md:w-[91%] mx-auto mt-20">
          <div class="flex items-center gap-4">
            <GradientHeading size="lg" className='font-medium sm:whitespace-nowrap'>Selected Works</GradientHeading>
            <GradientLine angle={45} startPercentage={20} endPercentage={80} className="h-[60px] w-[80%]" direction='rtl'/>
          </div>
          <div class="lg:flex gap-20 text-lg md:text-xl mt-10 w-full justify-between text-syoro">
            <p class="w-full lg:w-[50%] text-syoro"> While I can't share what I did at my previous companies, I can give a glimpse on my process and the project I worked on. <br> <br>Check out my resume if you are interested to know more about my career experience.</p>
              <div class="flex gap-20 mt-10 lg:mt-0 justify-center">
                <WorkCard
                  title="At Zynga"
                  period="2019-2024"
                  heroImage="/index/zynga.png"
                  url="/works/zynga"
                />

                <WorkCard
                  title="At Glu"
                  period="2018-2019"
                  heroImage="/index/glu.png"
                  url="/works/deerhunter2018"
                />
              </div>
          </div>
        </div>
        <div class="w-[98%] md:w-[91%] mx-auto mt-20">
          <div class="flex items-center gap-4">
            <GradientLine angle={45} startPercentage={20} endPercentage={80} className="h-[60px] w-[80%]" />
            <GradientHeading size="lg" className='font-medium sm:whitespace-nowrap text-right'>Snippets From Garden</GradientHeading>


          </div>
          <!--surface all the contents from essays here -->
          <div class="block sm:flex gap-10 mt-10" id="garden">
            <div id="essays" class="sm:w-[70%]">
              <a class="justify-center sm:justify-start flex items-center gap-2 hover:text-blue-600 transition-colors" href="/essays">
                <img src="/icons/tree.svg" alt="Essays icon" class="w-6 h-auto">
                <h3 class="text-3xl uppercase font-medium">Essays</h3>
                <img src="/icons/rightarrow.svg" alt="Right arrow" width="10px" class="rotate-90 sm:rotate-0">
              </a>
              <p class="text-center sm:text-left text-lg md:text-xl">Essays are more refined, long written documents which are opinionated and have a message to deliver.</p>
              <div class="grid grid-cols-1 md:grid-cols-2 3xl:grid-cols-3 gap-8 mt-10">
                {essays.map((essay) => (
                  <div class="group rounded-lg overflow-hidden transition-all">
                    <EssayCard
                    title={essay.data.title || 'Untitled'}
                    description={essay.data.description || ''}
                    pubDate={essay.data.pubDate}
                    heroImage={essay.data.heroImage}
                     url={`/essays/${essay.slug}`}
                    imageHeight="h-32"
                    />
                  </div>
                ))}
              </div>
            </div>
            <div id="notes" class="w-full sm:w-[30%] mt-5 sm:mt-0">
              <div>
                <a class="justify-center sm:justify-start flex items-center gap-2 hover:text-blue-600 transition-colors" href="/notes">
                  <img src="/icons/seed.svg" alt="Notes icon" class="w-8 h-auto">
                  <h3 class="text-3xl uppercase font-medium">Notes</h3>
                  <img src="/icons/rightarrow.svg" alt="Right arrow" width="10px" class="rotate-90 sm:rotate-0">
              </a>
              <p class="text-center sm:text-left text-lg sm:text-xl">Short, Unrefined, Vague documents.</p>
              </div>
<div class="grid grid-cols-1 gap-4 mt-10">
  {notes.filter(note => note.data.pubDate).map((note) => (
    <NoteCard
      title={note.data.title || 'Untitled'}
      description={note.data.description || ''}
      pubDate={note.data.pubDate}
      url={`/notes/${note.slug}`}
    />
  ))}
</div>
</div>

          </div>
          <div id="books" class="w-full mt-10">
  <a class="justify-center sm:justify-start flex items-center gap-2 hover:text-blue-600 transition-colors" href="/books">
    <img src="/icons/book.svg" alt="Books icon" class="w-6 h-auto">
    <h3 class="text-3xl uppercase font-medium">Library</h3>
    <img src="/icons/rightarrow.svg" alt="Right arrow" width="10px" class="rotate-90 sm:rotate-0">
  </a>
  <p class="text-center sm:text-left text-lg sm:text-xl">Books I've read and my notes on them.</p>
  <div class="grid grid-cols-1 sm:grid-cols-3 lg:grid-cols-4 gap-4 mt-10">
    {books.filter(book => book.data.pubDate).map((book) => (
      <BookCard
        title={book.data.title}
        author={book.data.author}
        readStatus={book.data.readStatus}
        heroImage={book.data.heroImage || ''}
        url={`/books/${book.slug}`}
      />
    ))}
  </div>
</div>

		</main>
		<Footer />
    <script>
      const greetings = ['hello', 'ഹലോ'];
      let currentIndex = 0;
      const span = document.getElementById('greetingSpan');

      function cycleGreeting() {
          currentIndex = (currentIndex + 1) % greetings.length;
          span.textContent = greetings[currentIndex];
      }

      // Change greeting every 1.5 seconds
      setInterval(cycleGreeting, 1500);
  </script>
	</body>
</html>

<style>
.plane-path {
  stroke-dasharray: 180;
  stroke-dashoffset: 180;
  transition: stroke-dashoffset 0.7s cubic-bezier(0.4,0,0.2,1);
}
.group:hover .plane-path {
  stroke-dashoffset: 0;
}
</style>


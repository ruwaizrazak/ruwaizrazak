---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import Link  from '../components/mdxComponents/Link.astro';
import { getCollection } from 'astro:content';
import GardenLink from '../components/GardenLink.astro';
import HeroSvgs from '../components/svgs/HeroSvgs.astro';
import GradientHeading from '../components/mdxComponents/gradientHeading.astro';
import GradientLine from '../components/mdxComponents/gradientLine.astro';
import EssayCard from '../components/EssayCard.astro';
import NoteCard from '../components/NoteCard.astro';
import WorkCard from '../components/WorkCard.astro';
import BookCard from '../components/BookCard.astro';


// Get 10 featured posts from each collection
// Helper function to standardize slug creation across collections
function createStandardSlug(post) {
  const filename = post.id.split('/').pop().replace(/\.[^.]+$/, '');
  return filename.toLowerCase();
}

// Helper function to sort by date
function sortByDateDesc(a, b) {
  const dateA = new Date(a.data.pubDate);
  const dateB = new Date(b.data.pubDate);
  return dateB.valueOf() - dateA.valueOf();
}

// Get featured and published posts from each collection
const notes = (await getCollection('notes', ({ data }) => data.publish === true))
  .filter(post => post.data.featured === true && post.data.pubDate)
  .map(post => ({
    ...post,
    slug: createStandardSlug(post)
  }))
  .sort(sortByDateDesc)
  .slice(0, 4);

const essays = (await getCollection('essays'))
  .filter(post => (
    post.data.publish === true &&
    post.data.featured === true &&
    post.data.pubDate
  ))
  .map(post => ({
    ...post,
    slug: createStandardSlug(post)
  }))
  .sort(sortByDateDesc)
  .slice(0, 10);

// Removed debug console.log statement

const works = (await getCollection('works', ({ data }) => data.publish === true))
  .filter(post => post.data.featured === true && post.data.pubDate)
  .map(post => ({
    ...post,
    slug: createStandardSlug(post)
  }))
  .sort(sortByDateDesc)
  .slice(0, 10);

const books = (await getCollection('books', ({ data }) => data.publish === true))
  .filter(post => post.data.featured === true && post.data.pubDate)
  .map(post => ({
    ...post,
    slug: createStandardSlug(post)
  }))
  .sort(sortByDateDesc)
  .slice(0, 10);

---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<Header />
		<main class="bg-white">
      <!--Hero Section -->
      <div class="w-[90%] mx-auto justify-between grid grid-cols-1 md:grid-cols-2 gap-10">
        <div class="sm:w-full md:w-2xl mt-20">
          <GradientHeading size="xl">A Cacophony of Thoughts</GradientHeading>
          <p class="w-[80%] text-xl">Personal Website and Portfolio of Ruwaiz Razak, a Designer.</p>

          <h4 class="text-xl uppercase text-gray-500 mt-10">Garden</h4>
          <ul>
            <li><GardenLink
              href="/essays"
              title="Essays"
              description="Very much under NDA, but I can show you my process."
            /></li>
            <li><GardenLink
              href="/notes"
              title="Notes"
              description="Not refined, incomplete, but a starting point."
            /></li>
            <li><GardenLink
              href="/books"
              title="Books"
              description="I've read, Currently Reading and my notes on them."
            /></li>
            <li>---</li>
            <li><GardenLink
              href="/about"
              title="About"
              description="What am I?"
            /></li>
            <li><GardenLink
              href="/live"
              title="Live"
              description="Shares a glimpse of whats happening."
            /></li>

          </ul>
        </div>
        <div class="hidden xl:flex justify-end">
          <HeroSvgs />
        </div>
        </div>
        <!--What am I Section -->
        <div class="w-full md:w-[96%] mx-auto p-5 mt-10 xl:mt-0" style="background: linear-gradient(26.18deg, #1E1E1E 40.52%, #324084 116.37%)">
          <div class="mx-auto border-1 border-gray-50 border-dashed p-5">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-8 items-center">
              <div class="w-full px-2 md:px-0">
                <GradientHeading size="lg" className='text-white font-medium'> What am I?</GradientHeading>
                <div class="text-white w-full py-5">
                  <p class="text-lg md:text-xl text-white">Senior User Experience Designer with 7 years of experience currently working at Nordeus. Previously at <Link href="http://www.zynga.com">Zynga</Link> and <Link href="http://www.glumobile.com">Glu Mobile</Link>.</p>
                  <br>
                  <p class="text-lg md:text-xl text-white">I worked on multiple mobile games across multiple genres, building features, onboarding experiences and lots and lots of researches.</p>
                  <br>
                  <p class="text-lg md:text-xl text-white">Read more about what I'm currently into <Link href="/live">Here</Link></p>
                  <br>

                  <h4 class="text-xl uppercase text-gray-100 text-white"> Contact</h4>
                  <p class="text-lg md:text-xl">I'm available via <Link src="mailto:hello@ruwaizrazak.com">hello@ruwaizrazak.com</Link>, you can also checkout my resume if you want to.</p>
                </div>
              </div>
              <div class="hidden md:flex justify-center md:justify-end">
                <img src="/graphics/designGeneralist.svg" class="w-[200px] md:w-[300px] lg:w-[400px]" alt="design generalist"/>
              </div>
            </div>
          </div>
        </div>
        <!-- Selected Works -->
        <div class="w-[98%] md:w-[91%] mx-auto mt-20">
          <div class="flex items-center gap-4">
            <GradientHeading size="lg" className='font-medium sm:whitespace-nowrap'>Selected Works</GradientHeading>
            <GradientLine angle={45} startPercentage={20} endPercentage={80} className="h-[60px] w-[80%]" />
          </div>
          <div class="lg:flex gap-20 text-lg md:text-xl mt-10 w-full justify-between text-syoro">
            <p class="w-full lg:w-[50%] text-syoro"> While I canâ€™t share what I did at my previous companies, I can give a glimpse on my process and the project I worked on. <br> <br>Check out my resume if you are interested to know more about my career experience.</p>
              <div class="flex gap-20 mt-10 lg:mt-0 justify-center">
                <WorkCard
                  title="At Zynga"
                  period="2019-2024"
                  imageSrc="/index/zynga.png"
                  url="/works/zynga"
                />

                <WorkCard
                  title="At Glu"
                  period="2018-2019"
                  imageSrc="/index/glu.png"
                  url="/works/deerhunter2018"
                />
              </div>
          </div>
        </div>
        <div class="w-[98%] md:w-[91%] mx-auto mt-20">
          <div class="flex items-center gap-4">
            <GradientLine angle={45} startPercentage={20} endPercentage={80} className="h-[60px] w-[80%]" />
            <GradientHeading size="lg" className='font-medium sm:whitespace-nowrap text-right'>Snippets From Garden</GradientHeading>

          </div>
          <!--surface all the contents from essays here -->
          <div class="block sm:flex gap-10 mt-10" id="garden">
            <div id="essays" class="sm:w-[70%]">
              <a class="justify-center sm:justify-start flex items-center gap-2 hover:text-blue-600 transition-colors" href="/essays">
                <img src="/icons/tree.svg" alt="Essays icon" class="w-6 h-auto">
                <h3 class="text-3xl uppercase font-medium">Essays</h3>
                <img src="/icons/rightarrow.svg" alt="Right arrow" width="10px" class="rotate-90 sm:rotate-0">
              </a>
              <p class="text-center sm:text-left text-lg sm:text-xl">Essays are more refined, long written documents which are opinionated and have a message to deliver.</p>
              <div class="grid grid-cols-1 md:grid-cols-2 3xl:grid-cols-3 gap-8 mt-10">
                {essays.map((essay) => (
                  <div class="group rounded-lg overflow-hidden transition-all">
                    <EssayCard
                    title={essay.data.title || 'Untitled'}
                    description={essay.data.description || ''}
                    pubDate={essay.data.pubDate}
                    heroImage={essay.data.heroImage}
                     url={`/essays/${essay.slug}`}
                    imageHeight="h-32"
                    />
                  </div>
                ))}
              </div>
            </div>
            <div id="notes" class="w-full sm:w-[30%] mt-5 sm:mt-0">
              <div>
                <a class="justify-center sm:justify-start flex items-center gap-2 hover:text-blue-600 transition-colors" href="/notes">
                  <img src="/icons/seed.svg" alt="Notes icon" class="w-8 h-auto">
                  <h3 class="text-3xl uppercase font-medium">Notes</h3>
                  <img src="/icons/rightarrow.svg" alt="Right arrow" width="10px" class="rotate-90 sm:rotate-0">
              </a>
              <p class="text-center sm:text-left text-lg sm:text-xl">Short, Unrefined, Vague documents.</p>
              </div>
<div class="grid grid-cols-1 gap-4 mt-10">
  {notes.filter(note => note.data.pubDate).map((note) => (
    <NoteCard
      title={note.data.title || 'Untitled'}
      description={note.data.description || ''}
      pubDate={note.data.pubDate}
      url={`/notes/${note.slug}`}
    />
  ))}
</div>
</div>

          </div>
          <div id="books" class="w-full mt-10">
  <a class="justify-center sm:justify-start flex items-center gap-2 hover:text-blue-600 transition-colors" href="/books">
    <img src="/icons/book.svg" alt="Books icon" class="w-6 h-auto">
    <h3 class="text-3xl uppercase font-medium">Library</h3>
    <img src="/icons/rightarrow.svg" alt="Right arrow" width="10px" class="rotate-90 sm:rotate-0">
  </a>
  <p class="text-center sm:text-left text-lg sm:text-xl">Books I've read and my notes on them.</p>
  <div class="grid grid-cols-1 sm:grid-cols-3 lg:grid-cols-4 gap-4 mt-10">
    {books.filter(book => book.data.pubDate).map((book) => (
      <BookCard
        title={book.data.title}
        author={book.data.author}
        readStatus={book.data.readStatus}
        heroImage={book.data.heroImage}
        url={`/books/${book.slug}`}
      />
    ))}
  </div>
</div>

		</main>
		<Footer />
	</body>
</html>


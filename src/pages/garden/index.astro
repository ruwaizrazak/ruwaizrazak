---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import Main from '../../components/Main.astro';
import NoteCard from '../../components/NoteCard.astro';
import BookCard from '../../components/BookCard.astro';

// Fetch all collections
const [notes, essays, casestudies, books] = await Promise.all([
  getCollection('notes'),
  getCollection('essays'),
  getCollection('casestudies'),
  getCollection('books')
]);

// Combine and sort all posts
const allPosts = [
  ...notes.map(post => ({ ...post, collection: 'notes' })),
  ...essays.map(post => ({ ...post, collection: 'essays' })),
  ...casestudies.map(post => ({ ...post, collection: 'casestudies' })),
  ...books.map(post => ({ ...post, collection: 'books' }))
].sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const collections = ['all', 'notes', 'essays', 'casestudies', 'books'];
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<Header />
		<Main>
			<div class="flex justify-center gap-4 mb-8">
				{collections.map(collection => (
					<button
						class="filter-btn px-4 py-2 rounded-full border border-gray-200 hover:bg-gray-100"
						data-collection={collection}
					>
						{collection.charAt(0).toUpperCase() + collection.slice(1)}
					</button>
				))}
			</div>

			<div class="masonry-grid columns-1 md:columns-2 lg:columns-3 gap-4">
				{allPosts.map((post) => (
					<div class="break-inside-avoid mb-4 post-item" data-collection={post.collection}>
						{post.collection === 'books' ? (
							<BookCard
								title={post.data.title}
								description={post.data.description || 'No description available'}
								date={post.data.pubDate}
								url={`/books/${post.id}/`}
								heroImage={post.data.heroImage || '/placeholder-book.jpg'}
								author={post.data.author || 'Unknown Author'}
								readStatus={post.data.readStatus || 'to-read'}
							/>
						) : (
							<NoteCard
								title={post.data.title}
								description={post.data.description || 'No description available'}
								date={post.data.pubDate}
								url={`/${post.collection}/${post.id}/`}
							/>
						)}
					</div>
				))}
			</div>
		</Main>
		<Footer />

		<script>
			const filterButtons = document.querySelectorAll('.filter-btn');
			const posts = document.querySelectorAll('.post-item');

			filterButtons.forEach(button => {
				button.addEventListener('click', () => {
					const collection = button.dataset.collection;

					filterButtons.forEach(btn => btn.classList.remove('bg-gray-100'));
					button.classList.add('bg-gray-100');

					posts.forEach(post => {
						if (collection === 'all' || post.dataset.collection === collection) {
							post.style.display = 'block';
						} else {
							post.style.display = 'none';
						}
					});
				});
			});
		</script>
	</body>
</html>

<style>
	.masonry-grid {
		column-gap: 1rem;
	}
	.break-inside-avoid {
		break-inside: avoid;
	}
</style>

name: Trigger Vercel Deploy on New Mastodon Post

on:
  schedule:
    - cron: '*/40 * * * *'  # Every 40 minutes
  workflow_dispatch:        # Manual trigger

jobs:
  check-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Restore last post ID from cache
        uses: actions/cache@v4
        with:
          path: .last_masto_id
          key: masto-id-cache

      - name: Check Mastodon API and Trigger Deploy
        run: |
          INSTANCE="mastodon.social"
          USERNAME="ruwaizrazak"
          ID_FILE=".last_masto_id"

          # Get account ID first
          ACCOUNT_RESPONSE=$(curl -s "https://$INSTANCE/api/v1/accounts/lookup?acct=$USERNAME")
          ACCOUNT_ID=$(echo "$ACCOUNT_RESPONSE" | jq -r '.id')

          if [ "$ACCOUNT_ID" = "null" ] || [ -z "$ACCOUNT_ID" ]; then
            echo "Failed to get account ID"
            exit 1
          fi

          # Get latest post ID from API
          LATEST_POST_RESPONSE=$(curl -s "https://$INSTANCE/api/v1/accounts/$ACCOUNT_ID/statuses?limit=1&exclude_replies=true&exclude_reblogs=true")
          LATEST_ID=$(echo "$LATEST_POST_RESPONSE" | jq -r '.[0].id')

          echo "Latest post ID: $LATEST_ID"

          # Compare with previous ID
          if [ -f "$ID_FILE" ]; then
            LAST_ID=$(cat "$ID_FILE")
            echo "Last post ID: $LAST_ID"

            if [ "$LATEST_ID" != "$LAST_ID" ] && [ "$LATEST_ID" != "null" ]; then
              echo "New post detected — triggering deploy"
              curl -X POST "$VERCEL_DEPLOY_HOOK_URL"
            else
              echo "No change — skipping deploy"
            fi
          else
            echo "No previous ID — triggering deploy"
            curl -X POST "$VERCEL_DEPLOY_HOOK_URL"
          fi

          # Save current ID for next run
          if [ "$LATEST_ID" != "null" ]; then
            echo "$LATEST_ID" > "$ID_FILE"
          fi

    env:
      VERCEL_DEPLOY_HOOK_URL: ${{ secrets.VERCEL_DEPLOY_HOOK_URL }}
